AWSTemplateFormatVersion: 2010-09-09
Description:  This template deploys a VPC, with public and private subnets in a HA
  configuration with three Availability Zones suitable for most production applications.
  It deploys an internet gateway, with a default route on the public subnet.
  It deploys a NAT gateway and default route for it in the private subnet.

Parameters:
  VpcCIDR:
    Description: IP range (CIDR notation) for this VPC
    Type: String
    Default: 10.192.0.0/16 # 10.192.0.1 --> 10.192.255.254 (65,536 addresses)
  PublicSubnetAz1CIDR:
    Description: IP range (CIDR notation) for the public subnet within the first AZ
    Type: String
    Default: 10.192.10.0/24 # 10.192.10.1 --> 10.192.10.254 (256 addresses)
  PrivateSubnetAz1CIDR:
    Description: IP range (CIDR notation) for the private subnet within the first AZ
    Type: String
    Default: 10.192.20.0/24 # 10.192.20.1 --> 10.192.20.254 (256 addresses)
  PublicSubnetAz2CIDR:
    Descriotion: IP range (CIDR notation) for the public subnet within second AZ
    Type: String 
    Default: 10.192.30.0/24 # 10.192.30.1 --> 10.192.30.254 (256 addresses)
  PrivateSubnetAz2CIDR:
    Description: IP range (CIDR notation) for the private subnet within second AZ
    Default: 10.192.40.0/24 # 10.192.40.1 --> 10.192.40.254 (256 addresses)
  PublicSubnetAz3CIDR:
    Description: IP range (CIDR notation) for the public subnet within second AZ
    Default: 10.192.50.0/24 # 10.192.50.1 --> 10.192.50.254 (256 addresses)
  PrivateSubnetAz3CIDR:
    Description: IP range (CIDR notation) for the public subnet within second AZ
    Default: 10.192.60.0/24 # 10.192.60.1 --> 10.192.60.254 (256 addresses)


Resources:
  HaVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-vpc"

  HaInetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-ig"
    
  HaInetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref HaInetGateway
      VpcId: !Ref HaVPC
    
  PublicSubnetAz1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref HaVPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref PublicSubnetAz1CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-public-subnet-1"
    
  PublicSubnetAz2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref HaVPC
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      CidrBlock: !Ref PublicSubnetAz2CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-public-subnet-2"

  PublicSubnetAz3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref HaVPC
      AvailabilityZone: !Select [ 2, !GetAZs '' ]
      CidrBlock: !Ref PublicSubnetAz3CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-public-subnet-3"

  PrivateSubnetAz1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref HaVPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref PrivateSubnetAz1CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-private-subnet-1"

  PrivateSubnetAz2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref HaVPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref PrivateSubnetAz2CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-private-subnet-2"

  PrivateSubnetAz3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref HaVPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref PrivateSubnetAz3CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-private-subnet-3"

  NatGatewayEIPAz1:
    Type: AWS::EC2::EIP
    DependsOn: HaVPC
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-eip-az1"

  NatGatewayEIPAz2:
    Type: AWS::EC2::EIP
    DependsOn: HaVPC
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-eip-az2"

  NatGatewayEIPAz3:
    Type: AWS::EC2::EIP
    DependsOn: HaVPC
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-eip-az3"

  NatGatewayAz1:
    Type: AWS::EC2::NatGateway
    DependsOn: NatGatewayEIPAz1
    Properties:
      AllocationId: !GetAtt NatGatewayEIPAz1.AllocationId
      SubnetId: !Ref PublicSubnetAz1
  
  NatGatewayAz2:
    Type: AWS::EC2::NatGateway
    DependsOn: NatGatewayEIPAz2
    Properties:
      AllocationId: !GetAtt NatGatewayEIPAz2.AllocationId
      SubnetId: !Ref PublicSubnetAz2

  NatGatewayAz3:
    Type: AWS::EC2::NatGateway
    DependsOn: NatGatewayEIPAz3
    Properties:
      AllocationId: !GetAtt NatGatewayEIPAz3.AllocationId
      SubnetId: !Ref PublicSubnetAz3

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    DependsOn: HaVPC
    Properties:
      VpcId: !Ref HaVPC
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-public-routes"

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: HaInetGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref HaInetGateway

  PublicSubnetAz1RouteTableAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetAz1
      RouteTableId: !Ref PublicRouteTable

  PublicSubnetAz2RouteTableAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetAz2
      RouteTableId: !Ref PublicRouteTable

  PublicSubnetAz3RouteTableAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetAz3
      RouteTableId: !Ref PublicRouteTable

  PrivateRouteTableAz1:
    Type: AWS::EC2::RouteTable
    DependsOn: HaVPC
    Properties:
      VpcId: !Ref HaVPC
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-private-routes-az1"

  PrivateNatRouteAz1:
    Type: AWS::EC2::Route
    DependsOn: NatGatewayAz1
    Properties:
      RouteTableId: !Ref PrivateRouteTableAz1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewayAz1

  PrivateRouteTableAz2:
    Type: AWS::EC2::RouteTable
    DependsOn: HaVPC
    Properties:
      VpcId: !Ref HaVPC
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-private-routes-az2"

  PrivateNatRouteAz2:
    Type: AWS::EC2::Route
    DependsOn: NatGatewayAz2
    Properties:
      RouteTableId: !Ref PrivateRouteTableAz2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewayAz2

  PrivateRouteTableAz3:
    Type: AWS::EC2::RouteTable
    DependsOn: HaVPC
    Properties:
      VpcId: !Ref HaVPC
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-private-routes-az3"

  PrivateNatRouteAz3:
    Type: AWS::EC2::Route
    DependsOn: NatGatewayAz3
    Properties:
      RouteTableId: !Ref PrivateRouteTableAz3
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewayAz3

  PrivateSubnetAz1RouteTableAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnetAz1
      RouteTableId: !Ref PrivateRouteTableAz1

  PrivateSubnetAz2RouteTableAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnetAz2
      RouteTableId: !Ref PrivateRouteTableAz2

  PrivateSubnetAz3RouteTableAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnetAz3
      RouteTableId: !Ref PrivateRouteTableAz3

  S3VpcEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal: "*"
            Action: 
              - "s3:*"
            Resource:
              - "*"
      RouteTableIds:
        - !Ref PrivateRouteTableAz1
        - !Ref PrivateRouteTableAz2
        - !Ref PrivateRouteTableAz3
      ServiceName: !Sub com.amazonaws.${AWS::Region}.s3
      VpcId: !Ref HaVPC


Outputs:
  HaVpcId:
    Description: High Availability VPC ID
    Value: !Ref HaVPC
    Export:
      Name: !Sub "${AWS::StackName}-vpc"

  PublicSubnetAz1Id:
    Description: High Availability VPC Public Subnet 1
    Value: !Ref PublicSubnetAz1
    Export:
      Name: !Sub "${AWS::StackName}-public-subnet-az-1"
  PublicSubnetAz2Id:
    Description: High Availability VPC Public Subnet 2
    Value: !Ref PublicSubnetAz2
    Export:
      Name: !Sub "${AWS::StackName}-public-subnet-az-2"
  PublicSubnetAz3Id:
    Description: High Availability VPC Public Subnet 3
    Value: !Ref PublicSubnetAz3
    Export:
      Name: !Sub "${AWS::StackName}-public-subnet-az-3"

  PrivateSubnetAz1Id:
    Description: High Availability VPC Private Subnet 1
    Value: !Ref PublicSubnetAz1
    Export:
      Name: !Sub "${AWS::StackName}-public-subnet-az-1"
  PrivateSubnetAz2Id:
    Description: High Availability VPC Private Subnet 2
    Value: !Ref PublicSubnetAz2
    Export:
      Name: !Sub "${AWS::StackName}-public-subnet-az-2"
  PrivateSubnetAz3Id:
    Description: High Availability VPC Private Subnet 3
    Value: !Ref PublicSubnetAz3
    Export:
      Name: !Sub "${AWS::StackName}-public-subnet-az-3"

  VpcDefaultSecurityGroup:
    Description: Default security group for VPC
    Value: !GetAtt HaVPC.DefaultSecurityGroup
    Export:
      Name: !Sub "${AWS::StackName}-vpc-default-sg"
